# Add binding to reload tmux.conf for fast, iterative development
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded!"

# -- display -------------------------------------------------------------------

# tst-keys -t vi-copyell tmux to use 256 colour terminal
set -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename off
set-option -g allow-rename off

# enable mouse
set-option -g mouse on

# increase history
set-option -g history-limit 10000

# fix delay
set -g escape-time 20

# numbering windows and panes
set -g base-index 1
setw -g pane-base-index 1
# renumber windows sequentially after closing
set -g renumber-windows on

# set terminal title
set -g set-titles on

 # slightly longer pane indicators display time
set -g display-panes-time 800
# slightly longer status messages display time
set -g display-time 1000

# activity
set -g monitor-activity on
set -g visual-activity on

# -- Key bindings  -------------------------------------------------------------------

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# set <prefix> key to C-a
set -g prefix C-a

# use C-a again to send ctrl-a to inner session
bind-key C-a send-prefix

# split windows (create pane)
bind-key | split-window -h -c '#{pane_current_path}'
bind-key _ split-window -v -c '#{pane_current_path}'

# <prefix> or Ctrl- or <prefix> Ctrl-
#   k --- previous pane
# h   l --- previous window / next window
#   j --- next pane

# Pane navigation (vim-like)
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# move the split line (resize pane)
# <prefix> shift-
#   k --- up
# h   l --- left / right
#   j --- down
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

unbind n
unbind p
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# bind -r n next-window
# bind -r p previous-window

bind -r ( switch-client -p
bind -r ) switch-client -n

# Copy mode

# vi-style controls for copy mode
setw -g mode-keys vi
set-option -s set-clipboard on
# C-v directly to enter vi-mode
bind [ copy-mode \; set mouse off
bind v copy-mode \; set mouse off
# bind-key -n C-v copy-mode \; set mouse off

# select and copy like vi in vi-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi q send -X cancel \; set mouse on
bind -T copy-mode-vi Escape send -X cancel \; set mouse on

# buffers

bind b list-buffers     # list paste buffers
bind ] paste-buffer
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from
# C-] directly to paste
# bind-key -n C-] paste-buffer

bind m set -g mouse on \; display "Mouse mode on"
bind M set -g mouse off \; display "Mouse mode off"

# -- Status bar  -------------------------------------------------------------------

# Set status bar on
set -g status on
# use vi-style key bindings in the status line
set -g status-keys vi
# Update the status line every second
set -g status-interval 1
# Set the status bar position
set -g status-position bottom # [top | bottom]
# Set the position of window lists.
set -g status-justify centre # [left | centre | right]
# Set status bar background and foreground color.
# set -g status-style fg=default,bg=default
set -g status-style fg=colour136,bg=colour235
# Set left side status bar length and style
set -g status-left-length 200
set -g status-left-style default
# set -g status-left "#[fg=green]#H #[fg=black]• #[fg=green,bg=default,bright]#(uname -r)#[default]"
set -g status-left "#[fg=green]  #S #[default]"
set -ag status-left "| #[fg=green]#(echo $USER)#[default].#[fg=blue]#h#[default] { "
# Set right side status bar length and style
set -g status-right-length 160
set -g status-right-style default
set -g status-right " } #[fg=green,bg=default,bright]#(tmux-mem-cpu-load --interval 2) "
set -ag status-right "| #{prefix_highlight} "
set -ag status-right "| #[fg=red,dim,bg=default]#(uptime | cut -f 4-6 -d ' ' | cut -f 1 -d ',') "
# WEATHER='#(curl -s wttr.in/Taipei:Banqiao:Zhonghe\?format\="%%l:+%%c%%t%%20%%h%%20%%w&period=60")'
# set -ag status-right "| $WEATHER "
# set -ag status-right "#[fg=white]%Y-%m-%d %p%l:%M:%S %a"
set -ag status-right "| #[fg=white,bg=default,bright]%Y-%m-%d %H:%M:%S %p %a"

# inactive window title colors
set -g window-status-style fg=colour244,bg=default,dim
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# active window title colors
set -g window-status-current-style fg=colour167,bg=default,bright
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# command/message line colors
set -g message-style fg=colour136,bg=colour236

# -- TPM  -------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
